<?php if ($this->isEnabled()): ?>
<script>
    var cdnUrl   = '<?= $this->getMediaUrl() ?>';
    var mediaUrl = '<?= $this->getBaseMediaUrl() ?>';

    var replacedImages = [];

    window.addEventListener('error', (event) => {
        if (event.target.tagName?.toLowerCase() !== 'img') return;
        const url = event.target.src.split('?')[0];
        if (replacedImages.includes(url)) return;
        replacedImages.push(url);

        event.target.src = url.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';

        if (event.target.srcset) {
            const srcsetUrls = event.target.srcset.split(',').map(src => src.trim());
            srcsetUrls.forEach((src, index) => {
                const srcUrl = src.split(' ')[0]
                if (srcUrl.includes('?imgstore=')) return;
                replacedImages.push(srcUrl);
                srcsetUrls[index] = srcUrl.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>' + ' ' + src.split(' ')[1];
            });
            event.target.srcset = srcsetUrls.join(', ');
        }

        if(event.target.offsetParent?.tagName?.toLowerCase() == 'picture') {
            const sources = event.target.offsetParent.querySelectorAll('source');
            sources.forEach(function(source) {
                let url = source.srcset.split('?')[0];
                if (replacedImages.includes(url)) return;
                replacedImages.push(url);
                source.srcset = url.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';
            });
        }
    }, {
        capture: true,
        once: false,
        passive: true
    });

    // Check if Breeze is loaded by using its custom event or a flag
    var isBreezeActive = false;

    document.addEventListener('breeze:load', function () {
        isBreezeActive = true;
    });

    window.addEventListener('load', function () {
        // Only run the mage/gallery require on product page
        if (document.body.classList.contains('catalog-product-view') && window.require) {
            require(['jquery', 'mage/gallery/gallery'], function($, gallery) {
                if (!$('[data-gallery-role=gallery-placeholder]')) return;

                $('[data-gallery-role=gallery-placeholder]').on('gallery:loaded', async function () {
                    const api = $(this).data('gallery');
                    const images = isBreezeActive
                        ? $('[data-gallery-role=gallery-placeholder]').data('gallery').options.data
                        : $('[data-gallery-role=gallery-placeholder]').data('gallery').fotorama.data;

                    const checkIfImageExists = (url, callback) => {
                        const img = new Image();
                        img.src = url;

                        if (img.complete) {
                            callback(true);
                        } else {
                            img.onload = () => callback(true);
                            img.onerror = () => callback(false);
                        }
                    }

                    let replacedGalleryImages = [];
                    let imagesUpdated = false; // Flag to track if any images are updated

                    const checkAllImages = () => {
                        if (!images || !images.length) return;
                        images.forEach(image => {
                            checkIfImageExists(image.img, (exists) => {
                                if (!exists) {
                                    // Update the image URLs
                                    image.img = image.img.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';
                                    image.thumb = image.img;

                                    if (isBreezeActive) {
                                        image.full = image.full.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';
                                        if (image.srcset.medium) {
                                            image.srcset.medium = image.srcset.medium.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';
                                        }
                                        if (image.srcset.small) {
                                            image.srcset.small = image.srcset.small.replace(cdnUrl, mediaUrl) + '?imgstore=<?= $this->getStoreCode() ?>';
                                        }
                                    }

                                    // Mark as updated
                                    imagesUpdated = true;
                                }
                                replacedGalleryImages.push(image);
                            });
                        });
                    }

                    await checkAllImages();

                    // Only update the gallery if any image was replaced
                    if (imagesUpdated) {
                        setTimeout(() => {
                            api.updateData(replacedGalleryImages);
                        }, 5000);
                    }
                });
            });
        }
    });
</script>
<?php endif; ?>
